name: Celestia

on:
  push:
    branches: [ master ]
    paths: [ src/**, .github/workflows/*.yml ]
  pull_request:
    branches: [ master ]
    paths: [ src/**, .github/workflows/*.yml ]

env:
  BUILD_TYPE: RelWithDebInfo
  CTEST_OUTPUT_ON_FAILURE: 1
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

jobs:
  gnulinux-arm64:
    runs-on: self-hosted
    steps:
    - name: 'Install dependencies'
      run: |
        sudo dnf config-manager --set-enabled ol8_codeready_builder
        sudo yum install -y eigen3-devel \
                            libepoxy-devel \
                            libpng-devel \
                            libjpeg-turbo-devel \
                            freetype-devel \
                            SDL2-devel \
                            lua-devel \
                            gtk3-devel \
                            gettext-devel \
                            cmake \
                            ninja-build \
                            gcc-toolset-11-gcc-c++

    - name: 'Checkout source code'
      uses: actions/checkout@v2
      with:
        submodules: true
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0

    - name: 'Configure CMake'
      run: |
        cmake -B ${{github.workspace}}/build \
              -G Ninja                       \
              -DENABLE_GLES=ON               \
              -DENABLE_SPICE=OFF             \
              -DENABLE_TOOLS=OFF             \
              -DENABLE_TESTS=ON              \
              -DENABLE_SDL=ON                \
              -DENABLE_GTK=ON                \
              -DUSE_GTK3=ON                  \
              -DENABLE_QT=OFF                \
              -DENABLE_FFMPEG=OFF            \
              -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: ninja

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest

    - name: Analyze
      run: |
        sonar-scanner                                                   \
          -Dsonar.cfamily.compile-commands=build/compile_commands.json  \
          -Dsonar.organization=celestiaproject                          \
          -Dsonar.projectKey=CelestiaProject_Celestia                   \
          -Dsonar.sources=src/                                          \
          -Dsonar.test.exclusions=test/**                               \
          -Dsonar.tests=test/
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
